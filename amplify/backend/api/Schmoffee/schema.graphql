type PastOrder @model @auth(rules: [{allow: public}]) {
  id: ID!
  items: [OrderItem!]!
  user: AWSJSON!
  shop: AWSJSON!
  final_status: Status!
  sent_time: AWSDateTime!
  received_time: AWSDateTime!
  accepted_time: AWSDateTime
  preparing_time: AWSDateTime
  ready_time: AWSDateTime
  collected_time: AWSDateTime
  scheduled_times: [AWSDateTime!]
  total: Float!
}

type OrderOption {
  name: String!
  price: Float!
  option_type: OptionType!
}

type OrderItem {
  name: String!
  price: Float!
  options: [OrderOption!]
}

enum Status {
  ACCEPTED
  REJECTED
  PREPARING
  READY
  COLLECTED
  RECEIVED
}

type OrderInfo {
  status: Status!
  accepted_time: AWSDateTime
  rejected_tim: AWSDateTime
  ready_time: AWSDateTime
  collected_time: AWSDateTime
  received_time: AWSDateTime
  scheduled_times: [AWSDateTime!]
  preparing_time: AWSDateTime
}

type CurrentOrder @model @auth(rules: [{allow: public}]) {
  id: ID!
  items: [OrderItem!]
  user: AWSJSON!
  shop: AWSJSON!
  sent_time: AWSDateTime!
  initial_scheduled_time: AWSDateTime!
  total: Float!
  order_info: OrderInfo!
}

enum OptionType {
  BEAN
  SYRUP
  MILK
}

type Option {
  name: String!
  shop: AWSJSON!
  option_type: OptionType!
  price: Float!
  image: AWSURL
  is_common: Boolean!
}

type Item @model @auth(rules: [{allow: public}]) {
  id: ID!
  shop: AWSJSON!
  name: String!
  price: Float!
  image: AWSURL
  options: [Option!]
  rating: Float
  is_common: Boolean!
  is_in_stock: Boolean!
  preparation_time: Int!
}

enum Day {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

type Cafe @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  email: AWSEmail!
  latitude: Float!
  longitude: Float!
  menu: AWSJSON!
  opening_time: AWSTime!
  closing_time: AWSTime!
  is_open: Boolean!
  opening_days: [Day!]
  image: AWSURL
  description: String!
  digital_queue: AWSJSON!
}

type Rating @model @auth(rules: [{allow: public}]) {
  id: ID!
  order: AWSJSON!
  user: AWSJSON!
  shop: AWSJSON!
  item: AWSJSON!
  rating: Float!
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  device_id: ID!
  phone: AWSPhone
  name: String
  payment_method: String
  latitude: Float
  longitude: Float
  is_locatable: Boolean
  the_usual: AWSJSON
}
 